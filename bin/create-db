#!/usr/bin/env node
//
//   Copyright 2015 Ilkka Oksanen <iao@iki.fi>
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing,
//   software distributed under the License is distributed on an "AS
//   IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
//   express or implied.  See the License for the specific language
//   governing permissions and limitations under the License.
//

'use strict';

const ObjectStore = require('rigiddb');

const store = new ObjectStore('mas', { db: 10 });

store.setSchema(1, {
    users: {
        definition: {
            deleted: 'boolean',
            deletionTime: { type: 'timestamp', allowNull: true },
            email: { type: 'string', allowNull: true },
            deletedEmail: { type: 'string', allowNull: true },
            emailConfirmed: 'boolean',
            emailMD5: { type: 'string', allowNull: true },
            extAuthId: { type: 'string', allowNull: true },
            inUse: 'boolean',
            lastIp: { type: 'string', allowNull: true },
            lastLogout: { type: 'timestamp', allowNull: true },
            name: 'string',
            nick: { type: 'string', allowNull: true },
            password: { type: 'string', allowNull: true },
            registrationTime: 'timestamp',
            secret: { type: 'string', allowNull: true },
            secretExpires: { type: 'timestamp', allowNull: true }
        },
        indices: {
            email: {
                uniq: true,
                fields: [
                    { name: 'email', caseInsensitive: true }
                ]
            },
            nick: {
                uniq: true,
                fields: [
                    { name: 'nick', caseInsensitive: true }
                ]
            },
            extAuthUrl: {
                uniq: true,
                fields: [ 'extAuthId']
            }
        }
    },
    windows: {
        definition: {
            userId: 'int',
            conversationId: 'int',
            emailAlert: 'boolean',
            notificationAlert: 'boolean',
            soundAlert: 'boolean',
            titleAlert: 'boolean',
            minimizedNamesList: 'boolean',
            desktop: 'int',
            row: 'int',
            column: 'int'
        },
        indices: {
            userId: {
                uniq: false,
                fields: [ 'userId' ]
            },
            conversationId: {
                uniq: false,
                fields: [ 'conversationId' ]
            },
            userIdConversationId: {
                uniq: true,
                fields: [ 'userId', 'conversationId' ]
            }
        }
    }
}).then(function(result) {
    console.log(result.val ? 'RigidDB schema initialized successfully.' : 'ERROR: Schema creation failed.');
    store.quit();
})
