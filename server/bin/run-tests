#!/usr/bin/env bash

set -e

function kill_containers
    docker stop $(docker ps -a -q)
    docker rm $(docker ps -a -q)
}

function start_containers {
    kill_containers

    docker run --rm -p 6379:6379 redis
    docker run --rm -e IRC.NETWORKS.IRCNET_HOST=localhost -e IRC.NETWORKS.IRCNET_PORT=6667 -e IRC.NETWORKS.IRCNET_SSL=false -e IRC.NETWORKS.IRCNET_RATE_LIMIT=10 -p 3200:3200 ilkkao/mas-travis
    docker run --rm -e IRC.NETWORKS.IRCNET_HOST=localhost -e IRC.NETWORKS.IRCNET_PORT=6667 -e IRC.NETWORKS.IRCNET_SSL=false -e IRC.NETWORKS.IRCNET_RATE_LIMIT=10 ilkkao/mas-travis npm run start-loopback
    docker run --rm -e IRC.NETWORKS.IRCNET_HOST=localhost -e IRC.NETWORKS.IRCNET_PORT=6667 -e IRC.NETWORKS.IRCNET_SSL=false -e IRC.NETWORKS.IRCNET_RATE_LIMIT=10 ilkkao/mas-travis npm run start-irc
    docker run --rm -e IRC.NETWORKS.IRCNET_HOST=localhost -e IRC.NETWORKS.IRCNET_PORT=6667 -e IRC.NETWORKS.IRCNET_SSL=false -e IRC.NETWORKS.IRCNET_RATE_LIMIT=10 ilkkao/mas-travis npm run start-irc-scktmgr

    echo "Waiting 5 seconds for the services to start."
    sleep 1
}

ROOT=$( cd $( dirname "${BASH_SOURCE[0]}" ) && cd .. && pwd )
cd $ROOT

if [[ ( $# < 1 ) ]]; then
    echo "Usage: $0 <env> [test]"
    exit 1
fi

### Ember tests

cd client && ember test && cd ..

### Nightwatch tests

NIGHTWATCH_ENV=$1

if [[ -z "$2" ]]; then
    SINGLE_TEST=""
else
    SINGLE_TEST="--test $2"
fi

start_containers

if [ "$NIGHTWATCH_ENV" == "local" ]; then
    node ./bin/nightwatch --env local $SINGLE_TEST --configFile=test/mas-test.conf
else
    # Can't run in parallel until there are multiple redises.
    node ./server/bin/nightwatch --env saucelabs-chrome-linux
    start_containers
    node ./server/bin/nightwatch --env saucelabs-ie-win
    start_containers
    node ./server/bin/nightwatch --env saucelabs-firefox-mac
fi

kill_containers
