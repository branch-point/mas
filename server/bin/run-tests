#!/usr/bin/env bash

set -e

docker network create mas-test || true

function kill_containers {
    docker stop $(docker ps -a -q) > /dev/null 2>&1 || true
    docker rm $(docker ps -a -q) > /dev/null 2>&1 || true
}

function start_containers {
    kill_containers

    docker run -d --name redis --network=mas-test -p 6379:6379 redis
    docker run -d --name ircd --network=mas-test -p 6667:6667 bfirsh/ircd
    docker run -it --network=mas-test -e REDIS__HOST=redis ilkkao/mas-travis ./bin/create-db
    docker run -d --network=mas-test -e REDIS__HOST=redis -e IRC__NETWORKS__IRCNET__HOST=ircd -e IRC__NETWORKS__IRCNET__PORT=6667 -e IRC__NETWORKS__IRCNET__SSL='' -e IRC__NETWORKS__IRCNET__RATE_LIMIT=10 -p 3200:3200 ilkkao/mas-travis
    docker run -d --network=mas-test -e REDIS__HOST=redis -e IRC__NETWORKS__IRCNET__HOST=ircd -e IRC__NETWORKS__IRCNET__PORT=6667 -e IRC__NETWORKS__IRCNET__SSL='' -e IRC__NETWORKS__IRCNET__RATE_LIMIT=10 ilkkao/mas-travis npm run start-loopback
    docker run -d --network=mas-test -e REDIS__HOST=redis -e IRC__NETWORKS__IRCNET__HOST=ircd -e IRC__NETWORKS__IRCNET__PORT=6667 -e IRC__NETWORKS__IRCNET__SSL='' -e IRC__NETWORKS__IRCNET__RATE_LIMIT=10 ilkkao/mas-travis npm run start-irc
    docker run -d --network=mas-test -e REDIS__HOST=redis -e IRC__NETWORKS__IRCNET__HOST=ircd -e IRC__NETWORKS__IRCNET__PORT=6667 -e IRC__NETWORKS__IRCNET__SSL='' -e IRC__NETWORKS__IRCNET__RATE_LIMIT=10 ilkkao/mas-travis npm run start-irc-scktmgr

    echo "Waiting 3 seconds for the services to start."
    sleep 3
}

ROOT=$( cd $( dirname "${BASH_SOURCE[0]}" ) && cd .. && pwd )
cd $ROOT

if [[ ( $# < 1 ) ]]; then
    echo "Usage: $0 <env> [test]"
    exit 1
fi

### Ember tests

# TODO: enable again
#cd ../client && ember test && cd ../server

### Nightwatch tests

NIGHTWATCH_ENV=$1

if [[ -z "$2" ]]; then
    SINGLE_TEST=""
else
    SINGLE_TEST="--test $2"
fi

start_containers

if [ "$NIGHTWATCH_ENV" == "local" ]; then
    async-node ./bin/nightwatch --env local $SINGLE_TEST
else
    # Can't run in parallel until there are multiple Redis instances.
    async-node ./bin/nightwatch --env saucelabs-chrome-linux
    start_containers
    async-node ./bin/nightwatch --env saucelabs-ie-win
    start_containers
    async-node ./bin/nightwatch --env saucelabs-firefox-mac
fi

kill_containers
