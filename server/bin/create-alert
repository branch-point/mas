#!/usr/bin/env node
//
//   Copyright 2015 Ilkka Oksanen <iao@iki.fi>
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing,
//   software distributed under the License is distributed on an "AS
//   IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
//   express or implied.  See the License for the specific language
//   governing permissions and limitations under the License.
//

'use strict';

const readlineSync = require('readline-sync');
const log = require('../lib/log');
const redisModule = require('../lib/redis');
const User = require('../models/user');
const notification = require('../lib/notification');

const redis = redisModule.createClient();

const message = readlineSync.question('Message: ');
const expiresInHours = readlineSync.question('Expires in (hours): ');
const dismissible = yesOrNo('Can be dismissed?');

const now = Math.round(Date.now() / 1000);
const ts = now + (expiresInHours * 60 * 60);

(async function main() {
    const alertId = await redis.incr('nextGlobalAlertId');

    const alert = {
        message,
        expires: ts,
        dismissible,
        report: true
    };

    await redis.hmset(`alert:${alertId}`, alert);
    await redis.sadd('alertlist', alertId);

    const allIds = await redis.smembers('alertlist');

    // Delete expired alerts
    for (const oldAlertId of allIds) {
        const oldAlert = await redis.hgetall(`alert:${oldAlertId}`);

        if (now > oldAlert.expires) {
            redis.del('`alert:${oldAlertId})`');
            redis.srem('alertlist', oldAlertId);
        }
    }

    // Deliver the alert
    console.log('Delivering the alert to all logged in users...'); // eslint-disable-line no-console

    const allUsers = await User.fetchAll();

    // Convert object to MAS notification
    alert.id = 'ALERT';
    alert.alertId = alertId;
    delete alert.expires;

    for (const user of allUsers) {
        await redis.sadd(`activealerts:${user.id}`, alertId);
        await notification.broadcast(user, alert);
    }

    redisModule.shutdown();
    log.quit();

    console.log('Done. All OK.'); // eslint-disable-line no-console
}());

function yesOrNo(label) {
    let result = null;

    while (result === null) {
        const response = readlineSync.question(`${label} [yes/no]: `);

        if (response === 'yes') {
            result = true;
        } else if (response === 'no') {
            result = false;
        }
    }

    return result;
}
