#!/usr/bin/env node
//
//   Copyright 2014 Ilkka Oksanen <iao@iki.fi>
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing,
//   software distributed under the License is distributed on an "AS
//   IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
//   express or implied.  See the License for the specific language
//   governing permissions and limitations under the License.
//

'use strict';

const Promise = require('bluebird'),
      elasticsearch = require('elasticsearch'),
      argv = require('yargs').argv;

let client = new elasticsearch.Client({
    host: 'localhost:9200',
//    log: 'trace'
});

client.indices = Promise.promisifyAll(client.indices);

(async function() {
    if (argv.deleteIndices) {
        console.log('Deleting all indices...');
        await client.indices.delete({
            index: '_all'
        });
    }

    console.log('Creating index "messages1"...');

    await client.indices.create({
        index: 'messages1'
    });

    console.log('Creating alias "messages", points to "messages1"...');

    await client.indices.putAlias({
        name: 'messages',
        index: 'messages1'
    });

    console.log('Setting mapping for "messages1"...');

    await client.indices.putMapping({
        index: 'messages1',
        type: 'message',
        body: {
            properties: {
                ts: {
                    type: 'date'
                },
                body: {
                    type: 'string'
                },
                cat: {
                    type: 'string'
                },
                userId: {
                    type: 'string'
                },
                conversationId: {
                    type: 'long'
                }
            }
        }
    });
})();
